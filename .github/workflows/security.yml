name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1' # Run weekly on Mondays at 2 AM

jobs:
  security-scan-backend:
    name: Security Scan - Backend
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: go
        queries: security-extended,security-and-quality

    - name: Build Go application
      working-directory: ./backend
      run: go build ./...

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    - name: Run govulncheck
      working-directory: ./backend
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

  security-scan-frontend:
    name: Security Scan - Frontend
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript-typescript
        queries: security-extended,security-and-quality

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    - name: Run npm audit
      working-directory: ./frontend
      run: npm audit --audit-level=high

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v3
